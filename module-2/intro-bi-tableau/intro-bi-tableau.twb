<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.21.0114.0916                               -->
<workbook original-version='18.1' source-build='2020.4.1 (20204.21.0114.0916)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <_.fcp.SingleValuePerNestSorting.true...SingleValuePerNestSorting />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='liquor_store_sales (liquor_store_sales)' inline='true' name='federated.0bq6cec0pts4qk11ec9rp0yvni0e' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='liquor_store_sales' name='cloudfile:googledrive-excel-direct.14ul7xr0ud429m15rmkpt0sq72n9'>
            <connection class='cloudfile:googledrive-excel-direct' cleaning='no' cloudFileExtension='xlsx' cloudFileId='1pQ2VFsuuwLqBstYYTY3fcZY32WLigw3Pzxnikkce6IA' cloudFileMetadata_-_folder='root' cloudFileName='liquor_store_sales.xlsx' cloudFileProvider='googledrive' cloudFileRequestURL='https://www.googleapis.com/drive/v3/files/1pQ2VFsuuwLqBstYYTY3fcZY32WLigw3Pzxnikkce6IA/export?mimeType=application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' compat='no' dataRefreshTime='' filename='liquor_store_sales.xlsx' interpretationMode='0' server='' server-oauth='' userLanguage='en' username='manuelaquinop@gmail.com' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='cloudfile:googledrive-excel-direct.14ul7xr0ud429m15rmkpt0sq72n9' name='liquor_store_sales' table='[liquor_store_sales$]' type='table'>
          <columns gridOrigin='A1:I10001:no:A1:I10001:0' header='yes' outcome='2'>
            <column datatype='string' name='Year' ordinal='0' />
            <column datatype='integer' name='Month' ordinal='1' />
            <column datatype='string' name='Supplier' ordinal='2' />
            <column datatype='integer' name='ItemCode' ordinal='3' />
            <column datatype='string' name='Description' ordinal='4' />
            <column datatype='string' name='ItemType' ordinal='5' />
            <column datatype='real' name='RetailSales' ordinal='6' />
            <column datatype='real' name='RetailTransfers' ordinal='7' />
            <column datatype='real' name='WarehouseSales' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='cloudfile:googledrive-excel-direct.14ul7xr0ud429m15rmkpt0sq72n9' name='liquor_store_sales' table='[liquor_store_sales$]' type='table'>
          <columns gridOrigin='A1:I10001:no:A1:I10001:0' header='yes' outcome='2'>
            <column datatype='string' name='Year' ordinal='0' />
            <column datatype='integer' name='Month' ordinal='1' />
            <column datatype='string' name='Supplier' ordinal='2' />
            <column datatype='integer' name='ItemCode' ordinal='3' />
            <column datatype='string' name='Description' ordinal='4' />
            <column datatype='string' name='ItemType' ordinal='5' />
            <column datatype='real' name='RetailSales' ordinal='6' />
            <column datatype='real' name='RetailTransfers' ordinal='7' />
            <column datatype='real' name='WarehouseSales' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[liquor_store_sales]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[liquor_store_sales]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Supplier</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Supplier]</local-name>
            <parent-name>[liquor_store_sales]</parent-name>
            <remote-alias>Supplier</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ItemCode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ItemCode]</local-name>
            <parent-name>[liquor_store_sales]</parent-name>
            <remote-alias>ItemCode</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Description]</local-name>
            <parent-name>[liquor_store_sales]</parent-name>
            <remote-alias>Description</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ItemType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ItemType]</local-name>
            <parent-name>[liquor_store_sales]</parent-name>
            <remote-alias>ItemType</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RetailSales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RetailSales]</local-name>
            <parent-name>[liquor_store_sales]</parent-name>
            <remote-alias>RetailSales</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RetailTransfers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RetailTransfers]</local-name>
            <parent-name>[liquor_store_sales]</parent-name>
            <remote-alias>RetailTransfers</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WarehouseSales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[WarehouseSales]</local-name>
            <parent-name>[liquor_store_sales]</parent-name>
            <remote-alias>WarehouseSales</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[liquor_store_sales]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I10001:no:A1:I2147483647:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Item Code' datatype='integer' name='[ItemCode]' role='dimension' type='ordinal' />
      <column caption='Item Type' datatype='string' name='[ItemType]' role='dimension' type='nominal' />
      <column caption='Quarter' datatype='integer' name='[Month (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Month]' peg='0' size='4' />
        <aliases>
          <alias key='0' value='Q1' />
          <alias key='1' value='Q2' />
          <alias key='2' value='Q3' />
          <alias key='3' value='Q4' />
        </aliases>
      </column>
      <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
      <column caption='Retail Sales' datatype='real' name='[RetailSales]' role='measure' type='quantitative' />
      <column caption='Retail Transfers' datatype='real' name='[RetailTransfers]' role='measure' type='quantitative' />
      <column caption='Warehouse Sales' datatype='real' name='[WarehouseSales]' role='measure' type='quantitative' />
      <column datatype='string' name='[Year]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='liquor_store_sales' datatype='table' name='[__tableau_internal_object_id__].[liquor!store!sales_F547087C3B914C3FB99046527144810B]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='liquor_store_sales' id='liquor!store!sales_F547087C3B914C3FB99046527144810B'>
            <properties context=''>
              <relation connection='cloudfile:googledrive-excel-direct.14ul7xr0ud429m15rmkpt0sq72n9' name='liquor_store_sales' table='[liquor_store_sales$]' type='table'>
                <columns gridOrigin='A1:I10001:no:A1:I10001:0' header='yes' outcome='2'>
                  <column datatype='string' name='Year' ordinal='0' />
                  <column datatype='integer' name='Month' ordinal='1' />
                  <column datatype='string' name='Supplier' ordinal='2' />
                  <column datatype='integer' name='ItemCode' ordinal='3' />
                  <column datatype='string' name='Description' ordinal='4' />
                  <column datatype='string' name='ItemType' ordinal='5' />
                  <column datatype='real' name='RetailSales' ordinal='6' />
                  <column datatype='real' name='RetailTransfers' ordinal='7' />
                  <column datatype='real' name='WarehouseSales' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='AVG Retail Sales by Year/Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='liquor_store_sales (liquor_store_sales)' name='federated.0bq6cec0pts4qk11ec9rp0yvni0e' />
          </datasources>
          <datasource-dependencies datasource='federated.0bq6cec0pts4qk11ec9rp0yvni0e'>
            <column caption='Item Type' datatype='string' name='[ItemType]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column caption='Retail Sales' datatype='real' name='[RetailSales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[RetailSales]' derivation='Avg' name='[avg:RetailSales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ItemType]' derivation='None' name='[none:ItemType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:ItemType:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[avg:RetailSales:qk]' shelf='columns'>
              <sort-filter-info>
                <sort-filter level-name='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]' member-value='&quot;2018&quot;' />
              </sort-filter-info>
            </shelf-sort-v2>
          </shelf-sorts>
          <_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
            <single-value-per-nest-shelf-sort dimension-to-sort='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]' shelf='rows' />
          </_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[avg:RetailSales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk] * [federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month:qk])</rows>
        <cols>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:ItemType:nk]</cols>
      </table>
      <simple-id uuid='{23D65429-B244-4F5E-9C34-A32FD61B70BB}' />
    </worksheet>
    <worksheet name='AVG Retail Sales by Year/Quarter'>
      <table>
        <view>
          <datasources>
            <datasource caption='liquor_store_sales (liquor_store_sales)' name='federated.0bq6cec0pts4qk11ec9rp0yvni0e' />
          </datasources>
          <datasource-dependencies datasource='federated.0bq6cec0pts4qk11ec9rp0yvni0e'>
            <column caption='Quarter' datatype='integer' name='[Month (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Month]' peg='0' size='4' />
              <aliases>
                <alias key='0' value='Q1' />
                <alias key='1' value='Q2' />
                <alias key='2' value='Q3' />
                <alias key='3' value='Q4' />
              </aliases>
            </column>
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column caption='Retail Sales' datatype='real' name='[RetailSales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[RetailSales]' derivation='Avg' name='[avg:RetailSales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Month (bin)]' derivation='None' name='[none:Month (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
            <single-value-per-nest-shelf-sort dimension-to-sort='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]' direction='DESC' measure-to-sort-by='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]' shelf='rows' />
            <single-value-per-nest-shelf-sort dimension-to-sort='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month (bin):ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month (bin):ok]' shelf='rows' />
          </_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[avg:RetailSales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk] / [federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month (bin):ok])</rows>
        <cols />
      </table>
      <simple-id uuid='{919EDFE6-8D89-4EFC-998E-612A2746ADB3}' />
    </worksheet>
    <worksheet name='AVG Retail Transfers by Year/Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='liquor_store_sales (liquor_store_sales)' name='federated.0bq6cec0pts4qk11ec9rp0yvni0e' />
          </datasources>
          <datasource-dependencies datasource='federated.0bq6cec0pts4qk11ec9rp0yvni0e'>
            <column caption='Item Type' datatype='string' name='[ItemType]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column caption='Retail Transfers' datatype='real' name='[RetailTransfers]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[RetailTransfers]' derivation='Avg' name='[avg:RetailTransfers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ItemType]' derivation='None' name='[none:ItemType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:ItemType:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[avg:RetailTransfers:qk]' shelf='columns'>
              <sort-filter-info>
                <sort-filter level-name='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]' member-value='&quot;2018&quot;' />
              </sort-filter-info>
            </shelf-sort-v2>
          </shelf-sorts>
          <_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
            <single-value-per-nest-shelf-sort dimension-to-sort='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]' shelf='rows' />
          </_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[avg:RetailTransfers:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk] * [federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month:qk])</rows>
        <cols>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:ItemType:nk]</cols>
      </table>
      <simple-id uuid='{E023274D-3677-463E-9ED7-63A1AC26B9CE}' />
    </worksheet>
    <worksheet name='AVG Retail Transfers by Year/Quarter '>
      <table>
        <view>
          <datasources>
            <datasource caption='liquor_store_sales (liquor_store_sales)' name='federated.0bq6cec0pts4qk11ec9rp0yvni0e' />
          </datasources>
          <datasource-dependencies datasource='federated.0bq6cec0pts4qk11ec9rp0yvni0e'>
            <column caption='Quarter' datatype='integer' name='[Month (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Month]' peg='0' size='4' />
              <aliases>
                <alias key='0' value='Q1' />
                <alias key='1' value='Q2' />
                <alias key='2' value='Q3' />
                <alias key='3' value='Q4' />
              </aliases>
            </column>
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column caption='Retail Transfers' datatype='real' name='[RetailTransfers]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[RetailTransfers]' derivation='Avg' name='[avg:RetailTransfers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Month (bin)]' derivation='None' name='[none:Month (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
            <single-value-per-nest-shelf-sort dimension-to-sort='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]' direction='DESC' measure-to-sort-by='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]' shelf='rows' />
            <single-value-per-nest-shelf-sort dimension-to-sort='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month (bin):ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month (bin):ok]' shelf='rows' />
          </_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[avg:RetailTransfers:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk] / [federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month (bin):ok])</rows>
        <cols />
      </table>
      <simple-id uuid='{1962DCB1-E202-4C8C-9E52-246B4097C8C2}' />
    </worksheet>
    <worksheet name='AVG Warehouse Sales by Year/Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='liquor_store_sales (liquor_store_sales)' name='federated.0bq6cec0pts4qk11ec9rp0yvni0e' />
          </datasources>
          <datasource-dependencies datasource='federated.0bq6cec0pts4qk11ec9rp0yvni0e'>
            <column caption='Item Type' datatype='string' name='[ItemType]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column caption='Warehouse Sales' datatype='real' name='[WarehouseSales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[WarehouseSales]' derivation='Avg' name='[avg:WarehouseSales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ItemType]' derivation='None' name='[none:ItemType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:ItemType:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[avg:WarehouseSales:qk]' shelf='columns'>
              <sort-filter-info>
                <sort-filter level-name='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]' member-value='&quot;2018&quot;' />
              </sort-filter-info>
            </shelf-sort-v2>
          </shelf-sorts>
          <_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
            <single-value-per-nest-shelf-sort dimension-to-sort='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]' shelf='rows' />
          </_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[avg:WarehouseSales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk] * [federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month:qk])</rows>
        <cols>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:ItemType:nk]</cols>
      </table>
      <simple-id uuid='{215BC74F-B906-4F85-BF26-BB80428BFA24}' />
    </worksheet>
    <worksheet name='AVG Warehouse Sales by Year/Quarter '>
      <table>
        <view>
          <datasources>
            <datasource caption='liquor_store_sales (liquor_store_sales)' name='federated.0bq6cec0pts4qk11ec9rp0yvni0e' />
          </datasources>
          <datasource-dependencies datasource='federated.0bq6cec0pts4qk11ec9rp0yvni0e'>
            <column caption='Quarter' datatype='integer' name='[Month (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Month]' peg='0' size='4' />
              <aliases>
                <alias key='0' value='Q1' />
                <alias key='1' value='Q2' />
                <alias key='2' value='Q3' />
                <alias key='3' value='Q4' />
              </aliases>
            </column>
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column caption='Warehouse Sales' datatype='real' name='[WarehouseSales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[WarehouseSales]' derivation='Avg' name='[avg:WarehouseSales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Month (bin)]' derivation='None' name='[none:Month (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
            <single-value-per-nest-shelf-sort dimension-to-sort='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]' direction='DESC' measure-to-sort-by='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]' shelf='rows' />
            <single-value-per-nest-shelf-sort dimension-to-sort='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month (bin):ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month (bin):ok]' shelf='rows' />
          </_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[avg:WarehouseSales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk] / [federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month (bin):ok])</rows>
        <cols />
      </table>
      <simple-id uuid='{C27AF2A8-5FD2-4D25-BA62-A3CB76256BF3}' />
    </worksheet>
    <worksheet name='Number of Records by Quarter'>
      <table>
        <view>
          <datasources>
            <datasource caption='liquor_store_sales (liquor_store_sales)' name='federated.0bq6cec0pts4qk11ec9rp0yvni0e' />
          </datasources>
          <datasource-dependencies datasource='federated.0bq6cec0pts4qk11ec9rp0yvni0e'>
            <column caption='Quarter' datatype='integer' name='[Month (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Month]' peg='0' size='4' />
              <aliases>
                <alias key='0' value='Q1' />
                <alias key='1' value='Q2' />
                <alias key='2' value='Q3' />
                <alias key='3' value='Q4' />
              </aliases>
            </column>
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='liquor_store_sales' datatype='integer' name='[__tableau_internal_object_id__].[liquor!store!sales_F547087C3B914C3FB99046527144810B]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[liquor!store!sales_F547087C3B914C3FB99046527144810B]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:liquor!store!sales_F547087C3B914C3FB99046527144810B:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='liquor_store_sales' datatype='table' name='[__tableau_internal_object_id__].[liquor!store!sales_F547087C3B914C3FB99046527144810B]' role='measure' type='quantitative' />
            <column-instance column='[Month (bin)]' derivation='None' name='[none:Month (bin):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
            <single-value-per-nest-shelf-sort dimension-to-sort='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month (bin):ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month (bin):ok]' shelf='rows' />
          </_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[__tableau_internal_object_id__].[cnt:liquor!store!sales_F547087C3B914C3FB99046527144810B:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month (bin):ok]</rows>
        <cols />
        <show-full-range>
          <column>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[Month (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{A953E50C-1E8D-47CC-A7E7-1DA4C21EA40E}' />
    </worksheet>
    <worksheet name='Total Retail Sales Year/Quarter'>
      <table>
        <view>
          <datasources>
            <datasource caption='liquor_store_sales (liquor_store_sales)' name='federated.0bq6cec0pts4qk11ec9rp0yvni0e' />
          </datasources>
          <datasource-dependencies datasource='federated.0bq6cec0pts4qk11ec9rp0yvni0e'>
            <column caption='Quarter' datatype='integer' name='[Month (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Month]' peg='0' size='4' />
              <aliases>
                <alias key='0' value='Q1' />
                <alias key='1' value='Q2' />
                <alias key='2' value='Q3' />
                <alias key='3' value='Q4' />
              </aliases>
            </column>
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column caption='Retail Sales' datatype='real' name='[RetailSales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Month (bin)]' derivation='None' name='[none:Month (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[RetailSales]' derivation='Sum' name='[sum:RetailSales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
            <single-value-per-nest-shelf-sort dimension-to-sort='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]' direction='DESC' measure-to-sort-by='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]' shelf='rows' />
            <single-value-per-nest-shelf-sort dimension-to-sort='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month (bin):ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month (bin):ok]' shelf='rows' />
          </_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[sum:RetailSales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk] / [federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month (bin):ok])</rows>
        <cols />
      </table>
      <simple-id uuid='{CA39C4D7-2641-4FAF-B740-25F4E4E30FE0}' />
    </worksheet>
    <worksheet name='Total Retail Sales by Year/Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='liquor_store_sales (liquor_store_sales)' name='federated.0bq6cec0pts4qk11ec9rp0yvni0e' />
          </datasources>
          <datasource-dependencies datasource='federated.0bq6cec0pts4qk11ec9rp0yvni0e'>
            <column caption='Item Type' datatype='string' name='[ItemType]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column caption='Retail Sales' datatype='real' name='[RetailSales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[ItemType]' derivation='None' name='[none:ItemType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[RetailSales]' derivation='Sum' name='[sum:RetailSales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:ItemType:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[sum:RetailSales:qk]' shelf='columns'>
              <sort-filter-info>
                <sort-filter level-name='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]' member-value='&quot;2018&quot;' />
              </sort-filter-info>
            </shelf-sort-v2>
          </shelf-sorts>
          <_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
            <single-value-per-nest-shelf-sort dimension-to-sort='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]' shelf='rows' />
          </_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[sum:RetailSales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk] * [federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month:qk])</rows>
        <cols>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:ItemType:nk]</cols>
      </table>
      <simple-id uuid='{4108879B-0A60-4835-85B1-1D076DE27EB1}' />
    </worksheet>
    <worksheet name='Total Retail Transfers by Year/Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='liquor_store_sales (liquor_store_sales)' name='federated.0bq6cec0pts4qk11ec9rp0yvni0e' />
          </datasources>
          <datasource-dependencies datasource='federated.0bq6cec0pts4qk11ec9rp0yvni0e'>
            <column caption='Item Type' datatype='string' name='[ItemType]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column caption='Retail Transfers' datatype='real' name='[RetailTransfers]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[ItemType]' derivation='None' name='[none:ItemType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[RetailTransfers]' derivation='Sum' name='[sum:RetailTransfers:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:ItemType:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[sum:RetailTransfers:qk]' shelf='columns'>
              <sort-filter-info>
                <sort-filter level-name='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]' member-value='&quot;2018&quot;' />
              </sort-filter-info>
            </shelf-sort-v2>
          </shelf-sorts>
          <_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
            <single-value-per-nest-shelf-sort dimension-to-sort='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]' shelf='rows' />
          </_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[sum:RetailTransfers:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk] * [federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month:qk])</rows>
        <cols>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:ItemType:nk]</cols>
      </table>
      <simple-id uuid='{01F25D5F-B708-42DE-BCBE-516EC85AC6CB}' />
    </worksheet>
    <worksheet name='Total Retail Transfers by Year/Quarter'>
      <table>
        <view>
          <datasources>
            <datasource caption='liquor_store_sales (liquor_store_sales)' name='federated.0bq6cec0pts4qk11ec9rp0yvni0e' />
          </datasources>
          <datasource-dependencies datasource='federated.0bq6cec0pts4qk11ec9rp0yvni0e'>
            <column caption='Quarter' datatype='integer' name='[Month (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Month]' peg='0' size='4' />
              <aliases>
                <alias key='0' value='Q1' />
                <alias key='1' value='Q2' />
                <alias key='2' value='Q3' />
                <alias key='3' value='Q4' />
              </aliases>
            </column>
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column caption='Retail Transfers' datatype='real' name='[RetailTransfers]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Month (bin)]' derivation='None' name='[none:Month (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[RetailTransfers]' derivation='Sum' name='[sum:RetailTransfers:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
            <single-value-per-nest-shelf-sort dimension-to-sort='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]' direction='DESC' measure-to-sort-by='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]' shelf='rows' />
            <single-value-per-nest-shelf-sort dimension-to-sort='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month (bin):ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month (bin):ok]' shelf='rows' />
          </_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[sum:RetailTransfers:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk] / [federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month (bin):ok])</rows>
        <cols />
      </table>
      <simple-id uuid='{3E613422-67C6-4C1B-8C33-363A1ABB6C92}' />
    </worksheet>
    <worksheet name='Total Warehouse Sales by Year/Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='liquor_store_sales (liquor_store_sales)' name='federated.0bq6cec0pts4qk11ec9rp0yvni0e' />
          </datasources>
          <datasource-dependencies datasource='federated.0bq6cec0pts4qk11ec9rp0yvni0e'>
            <column caption='Item Type' datatype='string' name='[ItemType]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column caption='Warehouse Sales' datatype='real' name='[WarehouseSales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[ItemType]' derivation='None' name='[none:ItemType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[WarehouseSales]' derivation='Sum' name='[sum:WarehouseSales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:ItemType:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[sum:WarehouseSales:qk]' shelf='columns'>
              <sort-filter-info>
                <sort-filter level-name='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]' member-value='&quot;2018&quot;' />
              </sort-filter-info>
            </shelf-sort-v2>
          </shelf-sorts>
          <_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
            <single-value-per-nest-shelf-sort dimension-to-sort='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]' shelf='rows' />
          </_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[sum:WarehouseSales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk] * [federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month:qk])</rows>
        <cols>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:ItemType:nk]</cols>
      </table>
      <simple-id uuid='{96FCC4D1-9EB0-4866-9D44-4E53B1A364E8}' />
    </worksheet>
    <worksheet name='Total Warehouse Sales by Year/Quarter'>
      <table>
        <view>
          <datasources>
            <datasource caption='liquor_store_sales (liquor_store_sales)' name='federated.0bq6cec0pts4qk11ec9rp0yvni0e' />
          </datasources>
          <datasource-dependencies datasource='federated.0bq6cec0pts4qk11ec9rp0yvni0e'>
            <column caption='Quarter' datatype='integer' name='[Month (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Month]' peg='0' size='4' />
              <aliases>
                <alias key='0' value='Q1' />
                <alias key='1' value='Q2' />
                <alias key='2' value='Q3' />
                <alias key='3' value='Q4' />
              </aliases>
            </column>
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column caption='Warehouse Sales' datatype='real' name='[WarehouseSales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Month (bin)]' derivation='None' name='[none:Month (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[WarehouseSales]' derivation='Sum' name='[sum:WarehouseSales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
            <single-value-per-nest-shelf-sort dimension-to-sort='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]' direction='DESC' measure-to-sort-by='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]' shelf='rows' />
            <single-value-per-nest-shelf-sort dimension-to-sort='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month (bin):ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month (bin):ok]' shelf='rows' />
          </_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[sum:WarehouseSales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk] / [federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month (bin):ok])</rows>
        <cols />
      </table>
      <simple-id uuid='{75859AEE-FF85-47B2-9ABB-AF5F769AA1D4}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Number of Records by Quarter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E517A3E8-50DA-4B4A-9597-8F5F4F0A339E}' />
    </window>
    <window class='worksheet' name='Total Retail Sales Year/Quarter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month (bin):ok]</field>
            <field>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month:qk]</field>
            <field>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EC05DDBD-FD95-46F1-8465-F12287BC915E}' />
    </window>
    <window class='worksheet' name='AVG Retail Sales by Year/Quarter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month (bin):ok]</field>
            <field>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6EF77A8D-5321-452B-BA57-24AD38D06230}' />
    </window>
    <window class='worksheet' name='Total Retail Sales by Year/Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:ItemType:nk]</field>
            <field>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month:qk]</field>
            <field>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{67962460-3D8F-4ACB-A4A8-EF7D1A95768C}' />
    </window>
    <window class='worksheet' name='AVG Retail Sales by Year/Month'>
      <cards>
        <edge name='left'>
          <strip size='165'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:ItemType:nk]</field>
            <field>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month:qk]</field>
            <field>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D12EF1E7-8E55-4B8C-890F-188F87D4D402}' />
    </window>
    <window class='worksheet' name='Total Retail Transfers by Year/Quarter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month (bin):ok]</field>
            <field>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6F3C3160-D13D-4BFC-B863-97968344FD8C}' />
    </window>
    <window class='worksheet' name='AVG Retail Transfers by Year/Quarter '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month (bin):ok]</field>
            <field>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CB5617E2-061E-4A40-A846-2FDFAA1401CE}' />
    </window>
    <window class='worksheet' name='Total Retail Transfers by Year/Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:ItemType:nk]</field>
            <field>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month:qk]</field>
            <field>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E3F6A734-1B22-477E-8361-987E1F272460}' />
    </window>
    <window class='worksheet' name='AVG Retail Transfers by Year/Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:ItemType:nk]</field>
            <field>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month:qk]</field>
            <field>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C62EA99C-E1B6-4D48-B00F-F7514F835C0B}' />
    </window>
    <window class='worksheet' name='Total Warehouse Sales by Year/Quarter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month (bin):ok]</field>
            <field>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6A4A0DF2-3EEE-46A3-B401-BB038C446025}' />
    </window>
    <window class='worksheet' name='AVG Warehouse Sales by Year/Quarter '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month (bin):ok]</field>
            <field>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BE184E7A-20B9-4AF2-9A5D-663C7CFD6E62}' />
    </window>
    <window class='worksheet' name='Total Warehouse Sales by Year/Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:ItemType:nk]</field>
            <field>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month:qk]</field>
            <field>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F18685BC-BD60-49B7-9286-E5AC326A4307}' />
    </window>
    <window class='worksheet' name='AVG Warehouse Sales by Year/Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:ItemType:nk]</field>
            <field>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Month:qk]</field>
            <field>[federated.0bq6cec0pts4qk11ec9rp0yvni0e].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{63C2C41C-FF38-47E0-9928-9E3B963C8DAE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='AVG Retail Sales by Year/Month' width='192'>
      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
      9YccAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='104' name='AVG Retail Sales by Year/Quarter' width='192'>
      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
      Tapy/gfan1iC+rWoeQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='AVG Retail Transfers by Year/Month' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29eXBb53nw+8MOAgQBkgD3fRVFahe1WrIseZET99pxttZ2m/S6zXSdO53e
      3s79q+l8M9/cmXx35nam7Xzu16RJ1NhJE9txLMuiFmuzNkuUuID7ToLgChL7jnPuHzROSImS
      QMqORPH8ZjgSwYMHzzk4z3nf93mfRSGKooiMzDpF+agVkJF5lMgGILOukQ1AZl0jG4DMukb9
      qBWQefz50Y9+RENDA263mz179jAxMUFxcTEOhwOtVosgCJSXl3Ps2DEGBwd59dVXaWhoYHZ2
      Fr/fj0ajwWq1MjQ0RG1tLSqV6lGfkoRsADIPRBAEAoEAXq+Xd955h1AoRHV1NRMTE7hcLtLT
      03nzzTc5fPgwubm5jIyM4PF4cLvdOBwOotEoJpOJUChEOBxm+/btj/qUJOQpkExKFBYWotfr
      CYfD5OXlkZaWRk1NDaWlpVitVhZ70w8dOsTbb7/N5s2bSU9PR6vVEgqFsFqtmEymR3gWdyOP
      ADIP5Ctf+Qo5OTn4fD727t3LwMAAlZWVqFQqamtrUSgUaLVarFYrO3fuJBAIsHv3bkwmE36/
      n6NHj2K1Wuns7CQvL+9Rn84SFPJGmMwXjd/vJy0tDYBwOIzRaHzEGt0byQASiQRut/tR67Nq
      AoHAY32hZR5PnpgRwOVykZ2d/ajVkFljyItgmXWNbAAy6xrZAGTWNbIByKxrZAOQWdfIBiCz
      rpENQGZdIxuAzLpGNgCZdY1sADLrGtkAZNY1sgHIrGtkA5BZ18gGILOukQ1AZl0jG4DMukY2
      AJl1jWwAMusa2QBk1jWyAcisa2QDkFnXrBkDEEWRiYkJBEHA6/UyNDSEIAiPWi2ZNc6aMYBg
      MEhXVxeCINDb24tKpcLhcDxqtWTWOGumNKLRaCQnJwcAlUpFZmYmk5OTJBIJRFEkkUgQi8Ue
      sZYya401YwAej4fR0VH0ej2CINDe3k5NTY1UalulUqHRaB6xljJrjTVZGS75xFerf2u/cmU4
      mdWwZtYAi1EoFEtufhmZ1bImDUBG5otCNgCZdc1jZQD/8i//8qhVkFlnPFYG0N3dzejoKF6v
      91GrIrNOeKwMAOD06dP09/czOjr6qFWRWQc8VgZgs9mkJmq/+MUvHrE2MuuBNbkPsBzyPoDM
      anisRgAZmd81j91u0vnz55mZmaGwsJC9e/eiUCgetUoyTzCP1QgwPj5Od3c3paWlUuCbjMyX
      yWNlAAaDgW3btpGTk0MwGHzU6sisAx6rKZAoipw8eZKNGzciiiKbNm161CrJPOE8VgaQlZXF
      K6+8gt/vJysr61GrI7MOWNYARkZGmJqaoqysDIfDQUZGBlarlcHBQTZt2oTdbkelUtHQ0IBS
      +cXOogYGBti1axdpaWlfqFwZmeVY9u4tKCjAZDLhcDjIzc3F5/Oh1+ulOHyv18vc3NyXolBB
      QQGXL1+mt7f3S5EvI7OYZUeA4eFhNBoNFotFSjnUarWoVCpisRhms5lIJIIgCF/4CACgVqvl
      RbDM74Rl716/308gEECtVjM5OUl6ejrT09P4fD7m5+dJJBJotdov5eafnp6mtLQUl8v1hcuW
      kbmTxyoUwuv1MjY2xsjICBs2bKC8vDzljTA5FEJmNTxW+wCjo6M0NTXh9XqJRqOPWh2ZdcBj
      ZQB1dXV8/etfR6FQ0N3d/ajVkVkHPFYGcOPGDf71X/8Vn88nh0LI/E54rNYAD4O8BpBZDY/V
      CCAj87tGNgCZdY1sADLrGtkAZNY1j1U0aKp0d3cTjUaprKzEaDQ+anVk1jBr0gDcbjdmsxmt
      VosgCIiiiCAIxOPxR62azBpjTbpBg8Egs7OzRCIRqqqqEEWRubk5OYdAZsWsyRHA6XTi9Xqp
      ra1FoVBIP19GcJ7Mk82aNICqqqpHrYLME4L8yJRZ18gGILOukQ1AZl0jG4DMukY2AJl1jWwA
      Musa2QBk1jWyAcisa2QDkFnXPPEGkAyWi8fjCIIgvR6JRBBFEVEUV1yBIvm+5d6b/IxoNLrk
      81LVdbH8O3VdfMxKuFOXxfJWiyiKRCIR6XdBEKRr/TAVPRaf+2JZsVhsVecOkEgkSCQS0u9J
      WaIoovr+97///VVr+xgRCoUwGAxLXotGo/zgBz8gJyeHX/3qV3R2dtLQ0EBHRweXL1/Gbrcz
      MjLCrVu3UCqVKSXiJxIJ3nrrLfR6PS0tLTQ3NxOPx8nPz+f69eucPXuWmpoaTp8+zYULF9i2
      bVtKMUpdXV38/Oc/Z8eOHbz11lukp6djs9mYmpri008/5erVqyiVSt577z0aGxtTvi7z8/P8
      /Oc/p62tjU2bNtHZ2Smd+9zcHO+//z4ajYaCgoKUZQK0tbVx7do1ZmZmKCsr4yc/+Qmtra3E
      43Fu3LiB0+mkoqJiRTIFQeCf//mfJX2OHz9Oa2srPp+P06dP09HRwZYtW1bUNCWRSPDDH/6Q
      1tZW6uvrCQQC/Od//iddXV0MDw8/2SPApUuXqK2txel0snXrVkpKSvD5fNLTa3R0lFAoxEsv
      vcTU1FRKMpVKJc8++ywKhYJAIMDLL7/M9PQ0ALt27cJisZCWloZSqSQej6f8ZW3YsIGSkhJU
      KhVHjhyRXs/OzsblcpGWlsamTZtWfKMqFApCoRCzs7P4/X7p3EdGRti/fz+5ubls3bp1RTIB
      SkpK6OzsxGazAQujytjYGPX19YRCIWpra1css7m5meLiYimsPRaL8fWvf51z585x+PBhsrOz
      Vzy6uN1uampqaGhoYHZ2lr6+Pl544QUsFgvhcPjJNgBAKuk4OjrK7OwsiUSC8vJydu7cSX5+
      PgqFgsHBwZSrUYuiyPz8PB6PB1EUGRwcRKfT4XK58Hg8eL1e5ufn2b59O3q9nlgslpJcv9+P
      1+slEAjgdrtxu914PB5cLhfPP/88Xq9X+gmFQimfv8Vi4ejRo9hsNmKxGFVVVTQ2NlJQUMDI
      yAjFxcWoVKqU5SUJh8N8+9vfpre3F5fLxcsvv0xRUREnT56koaEBq9W6YpnRaBSfz8fw8DCz
      s7PE43H6+/uprq6mp6cHj8eDRqNZkUyTycTExAQOhwOFQoHVaqWrq0vqRb0m8wGW415lUfx+
      P0qlUrrJMzMzEQSBzs5ONm/ejCiKdHd3s3PnzpQubjwep7m5GZVKRXl5ufTemZkZ/H4/c3Nz
      lJaWMjQ0RHZ2Nhs2bEhpFBgeHsbpdFJYWMjExARqtZqioiJEUaSvr4/S0lLi8ThTU1NUVFSQ
      l5eX8rX59NNPKSsrQ6vVotPpaG1tZdOmTYiiiNFoRKfTpSwryeDgIA6Hg61bt+Lz+fB4PGRl
      ZeHxeJibm6O8vHxFOiYJhULE43E8Hg9Go5HOzk727NlDW1sb2dnZlJSUrFhmT08PoihitVpJ
      T0+XRi6j0fjkG4CMzP1Yk/kA90MQRP7tw+aHkvFHL2zBoF86GlzrcNDSP7lqmQ0VOTy1aenT
      KxKL8x8nWlYtE+B//+o2tOqlU5hLbaN0DE2vWubW6jz2bCxa8logHOVYU9uqZVYVZvHszrsX
      xf/2YTOCsPpn8GvPbiLDuHQEu9nt5GaPM6X3P3EjgCiKTM0HAJhzuWhubua555/n4sWLCIkE
      Tx86RDQa5YMPPqCyooIdO3dy5swZGhsbMZvNANgsBlR3eG58wQiBcAxRFLl08SLVNTUE/H5a
      WlrYtXs3JSUljIyM4HQ6aWxs5NSpU1itVnbt2gWAQae564sSBJFp94KuMzMztLW18cwzz9DU
      1ESmxcKevXuJRqOcPXOG/IICIuEwYw4HDfX1bKirAyAn04jyjimWNxAhGFlYe4iiyIcffojR
      aOTwM88Qi8X49QcfUFFRgZBI4JyY4NChQ1gsFun9Rr0Gk2GprglBYMb9254NnZ2d9PT00NjY
      SFFREdeuXiUYDHL48GE+OnGCI0eOoNfrpeP1WjWWdD13MjXnJ3kD+v1+Ll68yNGjR1EqlbS1
      tTEwMMD+/ftpb29Hp9Px1FNPLXm/1WxArVr6XflDUfyh3y6Wz507hyiIHD78DIIo8tHx4+Tn
      55NhNj95I4BCoSAvKx0AjRhBQ5QMvRLHYDdHjx4lLysdp9NJhl7Jwb07mJqaxDMzTppqu/S+
      5TAZdJgMOgRBIC/bhEaMsGVjFdkZeiYmJsjbuhGi2TgGu0mEPGysKmFycpKsdC1arXZZmUrl
      b3VVJUJ0CmGU8SCVxbl4PB7MaSo6h4ZIUws01JRRWFjI+fPnqSrNv6+uGUadZGyxWIyofw5l
      PEiWSYfL5cekU/D03h3E43E++eQTlPEgeVlF95QHoFIql3ymaVs9QthLxOciL2sDB/fu4P33
      3yfknWVipA+L4QUslnvrmCR3kUy3Mo5BLZBjMaBWqzk3MUJpfjY97c2EPB4aDx4kN9P4wDVV
      epqW9LSFa+73+zGnqdDr9ajFCLOzs+ze3kBfXx/O+akn2wuUnZ2NXq8nGo2SmZmJ3W5nfn4e
      m83Gvn37OHbsGB988AF+v5+BgYGUZCqVSvLz84GFvsYdHR08/fTTAOTl5aFSqaQGIiqVKuUN
      J5vNhk6nIx6Po9VqUavVCIJAMBikpKSEM2fOEIvFmJycpKjo/jfrYpINB9PT04lGo9hsNvbv
      38+xY8ekDaFUPVWLEUWRcDgsbU7F43FUKhW/+MUvEARhVdW9LRYL6em/NQi1Wo3ZbMbtdpOf
      n89nn322Ig8YLOwDaDQatFot8XicSCRCWloaKpUKhULx5I0Ai+nq6mJsbIzJyUnS0tJQKBTM
      zc3hdDrp6emhrKyMF198kb6+viVTgPsRjUa5efOmlIiv1+sZGhoiEAgQDocZGxtj69atdHZ2
      kpmZec+n/53Y7XbGxsbYsGED/f39ZGRkSI0KL1y4QG5uLsPDw+zfv39F18BgMBCNRklLS2Nk
      ZAS9Xk97ezulpaXcvn1b+ttKaW1tJRAIkJeXR1tbG+Pj46jVav7u7/4Ou91OZWXlimUODQ0x
      MjJCe3s7CoUCs9nMxMQEe/fupaWlBb1ev2RalQoZGRnMz8/jcrnIz8+npKSEX//61+Tm5pKT
      k/PkrQHuRXKLPbkrKwiCdBN/GTyM/Dvf+7C6Jr/iO+Ul/7aaahp3Xs87P+OLYPFnPMw1uN/5
      P3EjgCiKTH++CF4t1nssgoPhlU8VkhiWWVgKgsiM++F0tS23CA5GCD2Erka9lnTD0pErIQjM
      ulffuFCvVWNeZhE8PR94qLgkq9mAaplFcCCU2o7xmjSA+z1tRBHeu/hw3WW+c3QLBv3Si2of
      mqGlb/Vu0E0VOTy1eakbNJZIPLSub351G1rNUjdoa/8k9sGZVcvcVnO3GzQcjT+UrlVFWTy3
      jBv0/UvdD+UGff25u92gXSOz3Ox+gt2g/f39zM3NUV9fL9UGlTfCZFbDmvQCeb1eNmzYgNOZ
      mpXLyNyLNWkAyUK4cilEmYdlTd5BeXl5DA0NUVxc/KhVkVnjSGuAO7OQ1hpydWiZ1SB5gQRB
      wOPxPEpdHopgMChPiWRWzJr0Ai2H7AWSWQ3yI1NmXSMbgMy6RjYAmXWNbAAy65on2gAikQgt
      LS243W56enro6+tDEAQSiQR2u53R0VFGRkZoa2tjZia12BlRFJmamiIQCDA1NcXt27cJBheC
      xJxOJ11dXSQSCbq6uhgaGkrZtRyLxRgdHZVi6fv7+6X3+nw+pqenCQQC3L59m0AgtQA6URSZ
      mJiQYugdDodUzMrhcGC32wmHw3R3d0ulXVJlfn6etrY23G43sJDUPzw8jMvlorW1ddVFrKam
      pvD5fMBvrwksVKEYHx9flcyRkRGGh4el37u7u5mamsLj8TzZBnDmzBnC4TAKhYIzZ86g1Wql
      nIDm5mZ0Oh16vR6n08ng4GBKMgVB4MyZMwwODpJIJAgGg1y7dk36vPHxcbq7u4nFYpw9ezbl
      1q1DQ0M0NTURiUS4ePGiVKlBEAQ+/PBDrl69SlNTE4lEIuWQ4Hg8zunTpxkdHWVubo6f/OQn
      0o1+5swZNBoNTqeToaEhzp49u6Kb9tKlS8RiMdTqBU+6KIqcOnWKpqYmFAoFly5dSllWklgs
      xs9+9jN6e3uBhcoTp0+fBuD8+fM0NTWtWGY0GuXy5cvcuHEDv9+P0+lkYGCAs2fP0tTU9GQb
      gMPhYHZ2lps3b1JYWMipU6eIxWJoNBoyMjI4ffo0OTk5zM/Ps2PHjpRkqlQqdu3ahUKhIC0t
      jWvXrknuV7VaTWtrK8FgEKfTycaNG6Ub5EHU1NRgs9lQq9Xk5ORw6tQp4vE4ra2tGAwG/H4/
      Y2NjjI6OYrfbU5Kp0WikKnInTpygqqpKerpWVVVx4cIFBgYGqKiowGAwrGgjtKKigv7+ftrb
      24GFyNxEIoHZbObWrVtMTq48crapqYmKigqpZk9tbS3Z2dk4HA5cLpdU4nIl+Hw+CgoKKCkp
      wePx4HQ6aWhowGQyIYri2gyHTpWKigoCgQCBQAClUokoioyMjBCNRtHpdLjdbimkItUbNRqN
      cuXKFalAVmVlJU6nE5VKRV1dHfF4nLS0NK5cucKRI0cQBCGlwlNdXV20tLRQXl6OSqVCEASG
      hoYwGo3k5ubS2tpKaWmpNIVLhXA4zJUrV9DpdGzevJmWlhZ8Ph+dnZ0Eg0G0Wi0Wi4VPP/0U
      jUazoo3EYDCITqcjEolgt9uZnJwkFotRUlKC3+9n27ZtKctKsnHjRjo6OvD7/bS3t6NUKmlp
      aaGsrIza2louXbq04qmVxWKhq6sLpVKJxWIhLy+P48ePo9frMZlMT/ZGmCiK+P1+jEYjkUgE
      lUol3eihUAi9Xr+kz3Aq3PkUCofDGI1GqZCrQqFAp9MRi8UWck7V6pRkJxIJBEFAqVQSiUTQ
      aDRS3mrycwECgQDp6ekpyVysq1qtRhRFFAqFVMg2Ho+j1+sJhUJSHnKqJBIJwuEwBoNBkpXU
      KRqNLhSdWmX21uKwnOQ1ST4UVrPbn1z3aDQaqVRkcjr8RBuAjMyDeOKmQAlB4L/95KL0+2qe
      Gv/n7++TymokOX1zkMvto3cdm6r83RsLeXF39ZLXwtE4/8/PPr3r2OST+l6/L+b/fuMpdJql
      X+OJa3181nW3x+Recu7MsHtqcwnP7liaveULRvh/f3F1WR3uZLlrsqkih68/vfGuY//bTy6S
      uM+05n7nDvB/fGM3maalSf3nbw9zvmV4sZCFfxeNpkmZT/QI0NraSn9/P5WVldy6dYuKigoO
      HDhAKBTi7bffZvv27YTDYaanp6VKyQ8ikUhw7NgxnnrqKfx+P/39/dTU1LB582bOnTvHwMAA
      DQ0NTE9P43A4+N73vpfS1KKrq4sbN27w7W9/mxMnThCLxXj11Vdxu92cPHmSoqIiDh48yFtv
      vcW3vvWtlEa7WCzGT3/6U5577jkmJyfp7+9n8+bNNDQ0cOXKFebm5jhy5AjHjx+nuLiY3bt3
      r2gq+OMf/5jnn3+ewsJCLl68yPj4OLW1tQwPD1NdXc2mTZtSkpVkfHycDz/8kD/90z9FpVJx
      /fp1hoeHyc/Px+PxMDIywp/92Z+taKomiiL/9V//BcA3v/lN4vE477zzDlarFbPZ/GR7gcrK
      ynA4HCiVSiYnJ6WFnsfjIRgMkpaWxuTkJKIoplxuQ6lUsn//fsLhsCQ/uch95plnyMjIYNu2
      bTz33HOSVycVNmzYQEZGBlqtlszMTFwuF0qlks7OTp5//nnm5ua4fPkymZmZKZcIV6vV7N27
      l1AoRGNjIxaLRbrB9+7dSzweZ3h4mLGxMWkvI1WSZUrC4TAApaWlBINBysrKGBoaSrkczGIK
      CgqkgsAAjY2NZGRkkJWVxdNPP70iZ0USt9uN1WqluLiYyclJ7HY7Bw4cIB6PMz4+/mQbgEaj
      4Wtf+xq9vb381V/9FaOjo7jdbsxmM9/73ve4du0azz77LDt27ODKlSspyVz8hNRqtbzyyisM
      Dg4SjUZxOp1kZWWh0+loamrihRdeSFnXpNx4PE5jYyNGoxG/349Op8Pr9RKPx+nt7WVoaIih
      oaGUZSblXrhwgcLCQjZu3Cgt1gF0Oh27du2SSsenSkdHB5OTk/T29hKNRsnOzkapVKJUKvn9
      3/99Ojo6Upa1WN8k0WiUCxcuUFBQQH19PZcvX2bfvn0rlqnT6QgEAvj9ftRqNenp6czPzxON
      Rp98N2h3dzcDAwNs376dc+fOkZ+fTyAQIBqN0traytatWxkeHmZwcJCDBw+mJDMajWK321Gr
      1fh8PhwOB7t372ZgYAC9Xs+ePXsQRZGqqioyMjJS1tVutxMMBrHb7QwPD5OXl8f8/Dzl5eVc
      vnyZzZs3s2HDBhwOR8pFvEKhEF1dXeh0OnQ6HSMjI5hMJmKxGC6Xi2AwiF6vx+/3U1BQsKI+
      AW+88QZTU1NoNBoGBgaYmJigqKiI3t5eqfnGShkaGsLn82G329FqtZLb2mKxUFRUtKqeAwaD
      gYyMDARBIBQKkZ+fT3d3NxUVFZjN5id7DSAj8yCeuBFAEEUuLPYArIL9DSV31doZGJ9jdHr1
      GXNFtgyqi5YaaDwhcKltZNUyAQ5sLr2rOnLvmIvxWe+qZZbkWqgsyFzyWiQW54p9bNUyczLT
      qS+z3fX6+Zbhh0rF3bOxiDTd0lL2QxPzDE+6U3r/E2cAgFQpzW7voKe7i4rKSgYG+jGZMnj+
      hRdwuVxcOPcJlswszGYzY2Nj7Nu3n9zcezfJUygUKBUKBEHkvfffY1djIx6Ph96ebjbWN1BX
      V8f58+cZHRtjV2Mj/f39WK3Z7N6zFwWgYHnvSlLXwaEhWm7f5tVXX8UxPk5z801e/t9eJhAM
      8s7bb/Od73yX1tZWBgf7ady1m/KysvvouiA3Hk/w3nvvcuDAAYLBEG1trXzta18D4MzZs4yN
      jrFz5w56e3owZWTw3PPPf67r/a9rknfffZennjpAbm4Obe3tlBQXMzw8wuBAHxvrG9iwYcOi
      995bZvL2n56e4fTpU/zBH/wBSqWS6599xtjoqNTO6fDhwyl56pLfVZLjxz9EFEVeeun3SAgC
      7737K2y2nCd/ChSLxbh9+/ZCN0ClEp/Pxze+8Q3m5+f56KOP0Ov1pKenk5WVxZ49e6QiW/dD
      FEVpm762tlYqlLtnzx5g4aaor6/n5MmT7NmzJ2XXYjgc5sSJE7z88su8++67KJVKvvGNb5BI
      JDh+/DgvvPACKpVKKpSbiotREARaWlowGo2UlpZy4sQJXn31Venvv/zlL2lsbOSjjz5Cp9Px
      5ptvpuwG7ezs5LPPPuPAgQNUVlYSCoUWFpVqNbdu3QKQrkmqRKNRTpw4wUsvvSR5e44fP86+
      ffvo6ekhPz+fsvsY/nJ4PB6uX79OWloaNTU1TE1Nodfr6ezsfPKb5NntdrxeL9/4xjcoLCzE
      5/OhUCiYnJxk165d6PV6jhw5gs1m49NP796QWo5kEBwstAoNhULs2rWLeDzO7OwsaWlppKen
      U1NTw+joqOQmfBB6vR6lUsnw8DBTU1M0NzdLif5Jl+K1a9cwGo00NDSkJFOpVEq6JuUnwyMm
      Jycxm82EQiE2bdokhTSkypUrV3C5XPT29krxTwqFgpaWFsLhMLt3705ZVpLF4RjxeJxgMEg4
      HCYrK2tVFaxhIXgxHo9LJeDVajWRSETyeK2pKdCdg9WDnlYul4tAIMDAwACTk5Ps2LEDt9tN
      VlYWt2/fJj8/n/7+fkZGRlJ2sSU9SMkbUxAEBgcHiUQiqNVq9u3bh9FoJB6PYzabU25Al+zb
      K4oif/3Xf01rayszMzMkEgmmp6e5ceMGbrcbURRxOBwp1UQKhUJSZ5VgMMjc3Bx9fX1S3NH+
      /fuJxWJ0dHRgs9lWtGP+J3/yJ4yPj6PRaOjp6ZG6XCZzD4aHhykvL09ZHix4gWZmZmhvb0ej
      0ZCVlcXu3bsJBAL09vZiMBgoKChY0R5Dst9AKBQiGAxSWFjIyZMnKSgoWNgXWStToGAwKA25
      g4ODzM/Py7VBZR6aNTMC6PV6qQeYz+eTaoNWVlYiiqIUkSgCncOzD/VZtcVZd3lWpuYDzHpW
      1p1kMVkZaeRnLV1jCIJI16hr1TIB6kqyUd6xwpyYCzDnXb2uVrOB3EzDktfiCYGesblVyzQb
      dRTZTHe93jnieigvUHVR5l1NAmfcQaZTLOW+ZgxAqVQuaXCQbMmzOJx5YY4LgxMLLjCv18vI
      8DCVlZWMj4+TkZFBbl4eiUSC/r4+0k2mBS/Q6Cg1NTWoPp9/1hRn3zUdmPeFP5crMjMzuzDN
      icUYGRmhqqqKNIOBocFBwuEwhYWFTE5Okm4yUVCQT9KvUmhdegMIoiDpmuwBXFBQwEB/P2qN
      hrLPewP39PZSUlxMIBjANeuiuqZGmgbUlVrv0tXlDTH0ua7TU9NkZGQQTySWnOfkxAQer5fC
      ggIcDgdqtZqqqipQKFCplORnL+3vJcR/qyvA7MwMk5OTVFVVoU9LY3pqilg8TrrRyMjICLW1
      tegWhZcUWU2U5Jrv+l6HJuZJVkdPTu+KiopQKBS45+cZHRujpqaG4eFhrNnZWG1LXamVBZl3
      nb/bH1miq8PhQBRFadrY/3lHIJ1ev3amQB6Ph+7ubqxWKzqdjunpaRoaGqQbYbkp0MDAAC6X
      C7vdTlZWFsFgkK9//et4vV7Js3L9+nVycnJQq9UpLdwSiQRvv/02W7duJS0tDZfLhdvt5oUX
      XmBkZISLFy9SXV1Nf38/sViMP/zDP0wpfqW3t5fz58/zx3/8x7S1tdHS0sLrr7/OjRs30Ov1
      DA4Osnv3bnp6esjOzmbnzp0PlJlMMdy7dy8dHR3k5OSg1WrZtWsXP/zhDzGbzdKC+uzZs/zF
      X/xFyl4gh8PB8PAwkUiEI0eO8OMf/5hoNMqhQ4fw+/1MTEzw1a9+NSVZScbHx3nvvff48z//
      c9RqtdQd/vLly2zfvp3R0VHeeOONFeUZRKNRfvnLX6JWq/nqV7+Kz+fjxo0b+O/L6+gAABrI
      SURBVHw+tFrt2vECmc1mdu/eTWVlJUVFRWzfvv2BiyGbzUZ7ezvPP/88IyMjDAwMEA6H0Wg0
      mEwmzp8/jyiKNDQ04Pf7U9JDpVKxZ88eFAoFNpuNjo4OKe2wqKgIlUpFTU0N09PTUj5yKtTU
      1EiG6PF4qKysRKfTkZeXR3Nzs9Tfq7m5mczMzAcLZCEWarFRb9q0SUqJjMfjUliFIAgrigQF
      MBqNXL16VQpPEASBcDhMTk4ON27c4MCBAynLSlJYWLhk4Wyz2WhtXdi7sNvt9Pf3ryheCRZS
      IgsLCykrK8Pj8TA+Ps7WrVul8AjV97///e+vWNPHkFAohMGwdN76s5/9jKysLHJzc6Xsr4KC
      Aubm5ohGo8zPz2MwGOju7qa0tJS8vLwHfk4sFqOpqYmJiQmam5vJyckhMzMTp9PJ6OiolLY4
      OzuLIAhs3rw5pRibnp4ezp07R2ZmJsePH6empoZEIiFFqZpMJqLRKHq9HkEQKC0tfaDMcDjM
      qVOnmJ6eRqVS0dPTQ3FxMR6Ph+HhYbKzs8nKyqK5uZkXXnhhRQbQ0dGBwWCQAvVGRkZQqVQ0
      NzdTWlqKxWKR+i6nytjYGKdPnyYrK4vZ2Vk+/PBDiouLsVqt6PV6NBoNW7duXZFMnU7HqVOn
      mJmZoaCggMzMTD7++GOpOeCamQI9iOWmQNFolHg8jkajwefzkZ6eLrUuDQQCGAwGlEolfr+f
      jIyMlNMMQ6GQtOZItuGEBbds8mZPDrE6nS4luUld1Wq1lF6YlOv1ejGbzcRiMUKh0EIcewou
      y+RTOSkrEAhgMplIJBIkEgmi0aj0+0rDjCORCMFgUHqSCoIgJZok28SuVGY8HicajUpppMn8
      5+T3ZzKZpGuyEpKh3lqtFqVSSSAQQKfTLawrn2QDkJF5EGvGC5Qqi1Mio9EoPo8bU4YZfyCA
      QqGQkkIWdgejaLU6PPNzmMwW6enyoJTIUCiERqNBrVYTCATQ6/WoVCo8Hg/xeByTyUQoGECr
      05GWtjAte1BKZHJUSk9Px+/3kYjHMVsyEQWBebcbnW6hS30sGsOYbpQ22B6UErlQvUGLUqEk
      EAwu2RiKRsKYzRY8Hjc6vR69fmG3NZWUyFAoRDDgx2LJRKVWL4xOwQA6fZo00ix+WqeSEhmN
      RPB5PWRYMtFoNCQSCdzzLszmTAIBP1qtjrQ7prmppET6/T4QRdJNC+Hpbvc8Op0etUr1ZI8A
      HR0dOJ1OAoEANpuNixcv8jd/8zfodDp+85vfEAwGycrKwmAwUF9fn1KDjUQiwX/8x3+wa9cu
      qqur+R//43/w+uuvU1FRwe3bt7l69SpbtmyRqsK99tprKa0Buru7OXPmDG+++Sa/+MUv2Llz
      J/X19TidTpqamnjqqaeIxWLcuHGD2tpa9u7d+0CZsViMH/7whzzzzDMIgsAnn3zCX/7lXwJw
      7NgxNBoN1dXV9Pb2IggCr732WsrrgN7eXkZHR1EoFBw5coR3332XyspK+vv7ycvLY+PGjStu
      WDIyMsL4+Djj4+N885vf5MSJE5jNZvLy8rh69SqJRII/+qM/WtFaJR6P89Of/hSVSsW3vvUt
      AoEAJ0+eRBAEjEbj2vECrYaKigrGx8elm3Xbtm1SZ/dkmZCenh6GhoZSrgynUql4+umnUSqV
      nDp1is2bN0vxPlu2bMFsNmOz2di6dSvZ2dlSDMqD2LBhA0VFRbhcLpxOJ9evXycWi0n7Hz09
      PWzcuBGdTid5nR6ERqPh6aefBqCuro7CwkLpb0ajkW3bttHf38+OHTtIT09fUSyQzWbjypUr
      kuOgt7eXmzdvYrVa6e/vZ2JiImVZSfLy8rh48aIks6+vj6GhIc6dO8e+ffuwWq0pp4MmSXrU
      NmzYgMvlYnh4mIMHD5KVlbWw5lqxlmuIX//615SUlKBWq7l06RJHjx5ldnZWqgnU0dFBdXU1
      OTk5UjWyBxGPx6V4GqvVSldXFxkZGRgMBjweDw0NDWRnZ0uV3VJdtI2PjzM6OsrWrVspKipC
      q9UyPj6OKIps3bqV9vZ2hoeHKSwsXFERr76+PjQaDQaDgdHRUaampohEIgQCAex2OxUVFbS1
      tS1ERq4gFmhqaornnnuOwcFB0tPTKS8vlxbV9fX1jI2NUV9fn7K85DV48cUXaW9vp7i4mNLS
      UgoLC+nv7+f69etEo9EV5xqbzWYGBwdRq9Xk5uaSk5PDlStX1ocXaHZ2Fr/fT2ZmJgqFYmFu
      HgqhVqvRarVSnujY2BglJSUpBa4lEgkp0b6goEDy2ASDQTQajRR16XA4SE9PT9lnPzc3h9fr
      JTMzk8Dn65WMjAxEUWRychKbzYZGo5F+UkFK/P48KjR5LWBhzeH1eikqKmJsbAyz2ZxyqiUs
      XNu5uTlKSkqkomPJHGaXy0VZWdmKvUAej4fJyUmKioqIxWLo9XpGR0cpKytjamoKo9G4qj5w
      U1NTiKJIeno6Op0Op9MpFSB47AwgGAzidrvR6/XSjZsKshdIZjU8dlOg3/zmNxQXF5OVlZXy
      03MxCUHgvx9LLbb/XvzNt/bc5QU62zzIFbtj1TIb6wo4uqtqyWvhaJwfvJNaNYp78X+9tu8u
      L9DH1/u52b36JuL7NxVzePvSUGZfMML/98vrq5ZZX27j1YN1d73+349dIiGs/hn8V6823uUF
      utAywsXW1FJNH6sRwG63c+XKFTIzMyksLGTv3r0rHgEWIkMf7pSUyrtrhQrCw7WRXdg4Wypz
      Pem6nExYeGDxEJfgYc//sRoB6urqcLlcbNu2jebm5lXJWNiNXXlR1gex8OV9sXJlXUH1JbS2
      Xcn5P1YGkCyLHQ6HKSgoeNTqyKwDljW/RCIhJTkn8ydFUSQWi0n/Jv//RWI2m6mrq8Pj8aTs
      lpSReRiWHQFGR0eZmZmRXGdKpZLy8nJaW1s5dOgQfX199PX18dJLL62omlgquN1uCgoKVuXu
      kpFZKcuOAPn5+ZIftqKiAp1Oh9VqlXzR5eXllJWVrapZwYPYu3cvLpdrVcVVZWRWyrL5ANev
      X6eoqAiDwSDtHGZmZi6kpVmt9PT0UFdXt+KNjlQ4d+4cmzdv5vbt29TV1aXsBVouH6Cvr49P
      PvmEtLQ0zp8/z9TUFMXFxQQCAT7++GOmpqbwer1cvnwZs9mMyXR3zuqdiKLI+fPn0el0+P1+
      zp49K703kUjwm9/8htLSUpqampibm6OwsDClc5iamuLKlSvk5OTQ1NRES0sLNTU1eDwePv74
      Y/x+v3SM1WpNqYZRIpHg7NmzmEwmfD4fV69epbKyElhocnfr1i2sVitNTU243W4pFTEVOjo6
      +PTTTzEajZjNZs6fP8/Vq1fRaDR88sknFBcXp1wRI8ng4CBnz57FYrFgMploaWnhypUrWCwW
      zp8/z9zcXErVMO7k7NmzDA4OUl5eLjUd9Hq9+Hy+5UeADRs2SI3kcnNz2bhxo1TwVRAEampq
      VnxyqVJaWsqNGzdSSk55EHl5eWzatImBgQGGh4epq6uTypkcOnSIwcFBysrK0Gq1KceuJIs/
      zc3NcebMGSwWi3Qz3rx5k7GxMUZGRrDZbFLfrFRQq9XMz89jMpl46aWXpDj4qakpYrEY3d3d
      VFVVoVQqV9TSVKPRMD8/L8lPUldXh8/nY2xsDK/XS21tbcoyYeF7Sk9Px+FY2Bs5dOgQGo2G
      9vZ2fu/3fo/z58+vSB4s1Bo6fPgwFy5cABYCBDUaDWfOnKG4uBin07niJnl+v59IJIJSqZTq
      GFVUVDA2NkZLS8vyBpCdnU1BQQEGg4G8vDxMJhMmk4mCggJMJlNKT5/V0NHRQVtb25IeUQ+D
      0+nEbrdz+PBhXnnlFd5//30CgYDUNGFxlbRUb1SlUikZZzweJz8/X0qtPHnyJNPT01KwXTL5
      JhWys7Olh8rVq1elqmqBQICcnBwpPFihUEg9rx6ESqWSSglarVap4nKyOJZarSYjI4MDBw7w
      zjvvrOiaJxNf4vG4VKnj0KFDKBQKtFrtim9UWOiv8Mknn0jfkVKpxGq14vP50Ol0K7qeSZLJ
      PhqNRkq4ScqCx8wNWlhYyNTUFIIgSHHrD0NPTw8ajYbOzk66urqwWq3MzMzgcrmkp1UikcDn
      86Vcci8ajXLz5k2USiVbtmzh1q1b1NfX097ezj/8wz/Q3NxMdXU1H374IZmZmSmvZex2O+Pj
      4/T19RGLxSgvL2d4eBitVsvU1BRms5mWlhYpZyAVQqEQt27dkgpjJeVHo1GGhoaIx+NSo+yS
      kpIVhRm3trbi9XrJycmhvb0dhUJBYWEhpaWlHDt2jKNHj6YsK0k0GkUQBI4cOUJbWxuZmZmM
      j49z8OBBbty4gdVqXXFGmNlsxuPxSM6VkpISPvjgA/Ly8sjNzX28doKnpqb47LPPiMViVFdX
      09DQ8IXFAt3ZB2vx68mnzWq4V48wQRBW1H3yQZ+xuFvkF+F8WHze97o2qb4/lddXI/NhdVws
      d/F7F9/yj9UI4PP5CIfDUuvO1SCKIhNzqVV4uBe5mca7dii9gQj+8Mpi0Rdj1GswG5e2YRIE
      kcn5h9M1Lyv9rqrNHn+YQCS1Kd1ypOu1ZBiXrvESgsDUfGDVMtO06rtidgAmXL6HiYQgx2K8
      q4iZLxjBF0qxjdRDfPYXTlVV1UJxpodAFOH45d6HkvHG85sx6Jde1K6RGVr7pwAIR8KoVGop
      Qd5gSEOj1hCLxxZqj2Zm4fV50Wp1GD/3TNWX57B/01IPRjwhPLSu3/3K1rsqo7UPTdM5NANA
      KBxGo1EjCIIUbq1SLhzvD/gxGAy43R70ej2GzwvQbqnOY3dd4RKZ4Wj8Ll2DoRA6nRaVUkVC
      SHxellxJIBggLc2wxDArCzM5ckeaJcBHV/seKsbo94803GWsvWMumntSc2o8VlOgh+F3FQ6d
      SCT40Y9+xO7duxkbG0OtVrN9+3ZsNhvvvvsu+fn50sJYEAS+853vfCnu4lSIxWL8+7//O4cP
      HyYUCjE6OorZbObpp59mYmKCf/qnf+LNN9+Ukk2++93vpjx1CYfD/OAHP+C1116jsrKSmzdv
      Ul5ejtFo5O///u/5x3/8xxXlFzwqnuiUyC8DpVLJoUOHUCqVWCwWJiYmmJpaGBl6enro7OzE
      7XbjdDoJhUJfymZhqqjVag4dOgRAdXU1LpeLurqFkOSmpiY2b96MWq1mZGRkSeO8VDh9+jSb
      N2+WPFI7duzAYDDw0UcfsXPnzpQ9VY+ax2oKtBZIlkNPJBKUlZWxceNGnE4nZrOZiooK8vPz
      GRgYYNOmTbjdbmKx2Je2Z/Ig4vE4g4ODaDQarl27RnV1NSqVCofDQV5eHrdv3yY7O5sdO3Yw
      MTGxUCktxdAWq9VKR0eH5CJPukJtNhs3btzA6XSm1M3lUbMmp0DhcJhIJILRaJSmF7/LKVCy
      40x6ejoul4vy8nICgQBqtZqJiQnKy8sZHR0lPT19wdX2BXiCVkOyYlty8y8UCmG1WhFFkczM
      TPx+v1QkICMjg5ycnBXpmiy6FQgEiEQiRKNRioqKJEfGFx0n9mWwJg3gs88+w2azUVBQID1d
      5ZRImdWwJqdAZrMZp9OJyWSSypskEolld3NjsRgajYZYLIZKpZLm5NFoFI1Gg0KhkI65Hxda
      R7nxeZqhICRQKJSfl+9LoFTe/aQTEgmUi56A26vzOLy97L6fkdxTWKzbYl2T5/OgzbWzt4a5
      3Td532NgwWOmUHx+PkqVlEKyq66Ag5tLlhzrD0X5n7+59dv3spBysvj8RUD8/HdRFBEFQboG
      G0qsvLT3/h6+5PknCw0kR5BYLCaVS0zlu1oJa3IEGBkZkWpFJovELjcC3L59m76+PhQKBV6v
      F5VKxRtvvIHH4+HatWtMTU2Rm5uL2+1my5Yt9+29FU8IJASBWCzGyY9P4pxwsm3rNoaHh7HZ
      bDxz+BmOHftPsjIzqaiokDLaXn/9dRRKBSql8i5/9WK6uro4ffo03/72t/n4449RKBS88cYb
      9Pb20tzcjEKhoKamht7eXurr6+9bJHaxrm+99W+88PzzuD1ubt++TUVFJc8+e4QrV64wNDjE
      M888w8mTJ1EoFHz3j7+7cOMto6soikTjC5WZ7e12Ll26xGuvvcav3v0VOp2e1197jZ///OeI
      iOzatYvz589Tt6GOffv2oVAudG3UqO89JRocHOTdd9/lb//2b/noo49wOBx897vfJRAI8Otf
      /1qqCJFcyG/btu2eslbCmvQC2Ww2CgsLHxgZWF9fjyiKlJeXEwqFmJmZIRAIYLFY8Hg8aLVa
      IpEIL730kuTJuRdqlRKdRo0xTU+GyYgQj9G4czsatZLamip0GjWZZhM+rxvEBKIQZ2Z6EgUC
      Oo36vjc/LAQglpSUIIoi4XCYyclJwuEwaWlpjI6OIggCRUVF9PX1PbBYwGJdX3zhOTRqJU/t
      20t+bg7PPH0AnUbNoYMHyMo0k25MY841A2ICnUZ9T10VCoX09+3btlBWWox73sWB/fvIy7Gi
      QEBIxDDodbS13GbSOY5zfEw6//vd/ADl5eVUV1ejVCrJyMiQigv39fXxla98BaPRiMfj4eWX
      X37gd7US1qQBGAwGMjPv7gxyJ6dPn6ayspKNGzdy9OhRbDabVLr82WefJRQKEY/HGRoaSrkL
      YTgcZtOmTWRmZvL+++9TXV1Nbm4uLpeLHTt2SBGzBw8eJD8/P+U9gEAgII1qR44cIS8vj2g0
      Sn9/Py+//LJULfmVV16hv78/JZmCIODxePB4PExPT2M0GtHr9czNzeHxeKRo0EOHDmE0GlOu
      DOf3+/H5fGg0GimaNBAI8OKLL2KxWKitraWurg6LxUIgkNrucSgUwufzMTc3R3V1NUVFRTid
      TiwWC93d3VINp6GhIalk/BfBE90fQKFQSJGEY2Nj7NixQ4oK7OnpYevWrdTX1zMxMUFjY2NK
      XgtBELDb7ZSXl1NcXCzJj8ViBINBYrEYDQ0N9Pb2smfPnpRyDGChKloyanF8fJzGxkYUCoVU
      uGrLli34/X7m5ubYvXt3SvPgWCzGxMQEarWa7OxsqqqqpLDoZMZfZWUlHo+H2tpasrKyUvIC
      ORwONBoNVqsVhUJBbW0tSqWS2dlZdDod27dvl8LpS0tLU86HUCqVkpu2sLCQnJyFZtY+n4/N
      mzdTW1vL6Ogoe/bs+cI8TGtyDbAcshdIZjWsSS/Q/RAEkf91fHUlVZL84fNbMOiXPmGvdTpo
      7X+wZ+VeNJTnsH/TUs9KJBbnxx+3rFomwB9/ZdtdsUCfto3SMZx60sydbK3KY/fGoiWvBcJR
      /vNU26plVhVmLRsL9L8+bEZ4iGfwHxzZdFcs0Ep44kYAURSZfMho0JzlokGDEQIpRhguh3GZ
      CEtBEJl6yGjQ3OWiQQMRgg8RuZqepsVkuDsadPphokF1Gizpd8/dJ+f8D5X8ZFsmGnQlPHEG
      ICOzEtakF0hG5otCNgCZdY1sADLrGtkAZNY1sgHIrGtkA5BZ18gGILOukQ1AZl0jG4DMukY2
      AJl1jWwAMusa2QBk1jWyAcisa2QDkFnXyAYgs66RDUBmXSMbgMy6Zk0aQCQSYX5+/gtv1C2z
      /liTSfHt7e1SF5mCgoJHrY7MGmZNjgAqlYqysrKUiy7JyNyLNWkA8Xic/v7+lItOycjcizVZ
      FSIajRIMBjGbzVLVMbkqhMxqkAwgkUjgdrsftT6rJhAIfOENvEVRTLlhxJd1bKo8qbp+GTIX
      H7smR4DlSHY+fxAr6Tebqsyk3FS/AFnXx+f816QXaDlS/UJX8uR51Mc+6s9fybFrReadxz4x
      I4AoikxMTKDRaEgkEoTDYcxmM4FAAK1WS05OjnSsx+PB6/VitVpRqVRSR/LJyUkyMzMxm833
      /Zzp6Wmi0Sj5+flMT0+TSCTIzs5mdnYWo9FIPB4nFotRUFCwbAn3eDyO1+vFYrEQiUQIh8P4
      /X4KCgqYn5/HarUumdJNT0+TnZ1NJBJBr9ejUCiYnJxEp9ORlZV1l/xodKEsolqtJhwOo1Kp
      mJiYICcnB1EUMRqN+P1+dDodTqdTkjE/P4/NZntgqfjke0OhkNShR6fTkUgkEEURlUqF0+lE
      p9OtuEfa7OwsoVCI/Px8ZmdnicViWCwW5ufnMZvN9/1u7qdrOBzG7Xaj0Wiw2Ww4nU70ev3a
      9AIth8fjwel0olKpMBgMjI2NIQgC09PTDA4OSjcFgN1uR6/XMzs7y8zMDDMzMzidTubm5ujr
      61u21dJihoaG8Pl8jI6OMjo6isFgYHx8HACtVsvQ0BCiKDIwMLDs+4PBIBcvXsTn8zE8PExX
      V5d0/KeffirpAQtrs87OTsbGxhgeHiYajTI+Pk4gELhnifSZmRnm5uak3gd2u5309HTsdju9
      vQvNrvv6+ujq6iItLY2Ojg4GBgZIS0vDbrc/8Fr39PQwOTnJrVu36OnpweFwEAgEaG9vZ3x8
      XPouVlPHf3BwEJVKRW9vL0NDQ9K1VSqVq+q22dvbS1tbGx6PB5fLhV6vp6enB6VSufCzYomP
      KSaTCYPBQF9fHxkZGaSnp6PX65mYmMDj8Sy5Waqqqujs7CQajUpPf1io0Z9Kq9BAIMDIyAga
      jQaPx4PD4QDA6XTidrvxeDy0traSn59/Txnl5eUMDAwQj8cxmUzk5+cTDAYpLS2VDKijo4OJ
      iQmUSqVkYABut5vi4uKU3cAKhYLs7GzpaZ38icfj2Gw2NBoNgiBw69atB3afgYUGJRMTE9LT
      ODnKZWdnS91bZmdnmZ6eXvFiNxgMcvv2bXJycvD7/TgcDhKJBCMjI3g8nhXJApibmyMQCJCe
      ni497CKRCGlpaXR1dT05BpCcSty5OVZZWUlmZibz8/PSay6XC7VajVKppKuri56eHkwmExs2
      bGDXrl24XC5cLhdzc3P3/Lzs7GzC4TCwcIMlF1aiKGKz2aitrWVy8t7l1E0mE9FoFJVKhcvl
      4tatW2RnZ6NSqbBYLHi9Xurr65mbm2PDhg2oVCpCoRB2ux2LxcKNGzcYHh7G4XAwOTm5ZISD
      hSff7OwssDAVamlpIRKJoNPpuHHjBuFwGKPRyK1btyQ9GhsbmZ2dJZFI3PdaWywWfD4fZrN5
      SUPsoqKiu855pTNss9nM5s2bJTnJa7ply5ZV9R3Ozs4mLy+P8fFxSZbZbKa/v59EIsH/DyU2
      EldJl9fmAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='104' name='AVG Retail Transfers by Year/Quarter ' width='192'>
      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
      Tapy/gfan1iC+rWoeQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='AVG Warehouse Sales by Year/Month' width='192'>
      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
      VVUV/x/MI8pQ48UBvgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='104' name='AVG Warehouse Sales by Year/Quarter ' width='192'>
      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
      TSErzqvAIAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='104' name='Number of Records by Quarter' width='144'>
      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
      YII=
    </thumbnail>
    <thumbnail height='104' name='Total Retail Sales Year/Quarter' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Retail Sales by Year/Month' width='192'>
      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
      ZyG8Xi9TU1OEw2HGxsbWLS/F9PT0nHvy1BpAY2MjOp0Op9PJp59+Kn0+OTnJ3//93zMwMEBP
      Tw9XrlwhGAyiVCq5dOnSkjJDoRC//OUvaWpqoquri+vXrxMOhwmFQly/fh2tVovL5UIURa5c
      uYLf7+f+/fvMzMwsKlMURUKhEDdu3ODjjz8mHA5z+fJlAC5cuMDY2BgPHjwgGo1y5coVxsfH
      UalUy+oKs9UxGhsbsdvt0v9rNBouXLiAzWbjm2++YWJigtu3by9ZumUxenp6+Kd/+icEQeD8
      +fMMDg7S1dXFV199tWpZDyMIAr/5zW9obm6mvb2dq1evrkvew3K//PJLHA6H9FJ8ag2gpKSE
      ixcvkpubK+0Yi6LIb3/7W6qqqlCr1djtdqkIU1NTE+np6UvK/OKLL6QSIk6nk97eXultnZub
      S2NjI1lZWbS2tnL48GHi8Thms3nJDTqlUonP56OoqIicnBza2tqkQlqpYl3p6elMT09TWVlJ
      YWEhzc3NHD16dNlrkCoslcJoNNLW1oZer2fv3r0YDAamp6fx+/189dVXqxoBotEoly9fpqio
      iMbGRnJzc3G5XJSUlKy7efmdO3dIS0sjGAzS0NCAwWBYl7wUgiBgNBqpqanB5XIBT6kBpOpp
      ph6g+/fv09nZSXt7O/v37yccDpNMJqmtraW0tJTJyUlKSkqYnFy6kkJ9fb1UU3Tnzp0UFxcT
      jUYZGhpCq9USj8d5//33SUtLw+128/7776PT6ZasbRmPx/nkk09QqVTSA+Tz+WhvbycWi5Gf
      n4/T6aSxsRFRFPnss89QKBQr2rSMRCLcuHGDO3fu0NXVRV9fH5mZmXg8Hpqamrh//z4ajQa1
      Wr3qSACFQsHBgwfxer0UFhZiNpsxGAzcu3dvyRFvJZSUlJCVlYXX6+Xu3bvcv3+fqam1h3en
      UKlU+Hw+GhsbpSJoT+VGWKrIrEKhQK1WS0VWOzo6aGhokDKq/H4/RqMRhUJBMBjEbDYvu5uc
      ulyBQACDwUBHRwe1tbXE43Gp+NXDWVwAarV60WwpURSJx+NSn+NwOIxOp6O9vZ36+nqi0SgG
      g4FEIiEdk8o3Xm7akjJWmK2G0NDQQCgUwmg0Sg+8SqUiGo1K+curzepK6ZK6LpFIBJVKteIE
      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
    </thumbnail>
    <thumbnail height='192' name='Total Retail Transfers by Year/Month' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='104' name='Total Retail Transfers by Year/Quarter' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Warehouse Sales by Year/Month' width='192'>
      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
      PUt9fT2JRIJDhw5RV1e3po89IyODxcVFuru7qauro6amBrfbjcViQafTUV1dTV3dcsjv66+/
      Tl9fH62trRv2hDwpi4uLLCwsYDKZEASB2dlZXn31VSltdGxsDLfbzezsLC0tLU89tGUzsOUM
      IBgMSrm9Y2NjTE1NMTc3h0qloqqqiuHhYbRaLX19fSwuLlJQUMDS0hIzMzOcP3+e119/fc23
      YHZ2Nk1NTVJFtKSnZnh4mLa2NioqKlhcXMRisUilwfPz8ze8nnlSkt0vR0ZGmJqaIisrizt3
      7hCPx9FqtezduxeAiooKVCrVtjSATTkFSvrsTSaT5K58cAqUrO5mNBpxuVxS3X6VSiW1NV1Y
      WMBsNpObm0s0GkUQBMLhMBkZGWsagNvtZmZmhsrKShYWFlCpVFJuaTKLLTc3F4VCgU6nY2Fh
      Ab/f/7WFjaSL1+vl/v37HDt2jLGxMQoLCwkGg/h8PsrLy5mcnESn063L7bxV2JQGcPfuXfLy
      8igqKpJccHJKpMxGeK68QOmSkZHB9PQ0FosFtVotlfmLxWIIgsiPHpG6JwgJlMpHR7D+j2/t
      x6RfuWi92uHg3iPSDB8nd19NAa/sK3/k7z4tLraO0TY4m/LfREB8zF7CoboiXm4qXddvJstB
      Pk2Sm5ZPe1R6UNdNOQKMj4/j8/mwWCyUlS03WXswJTIaT12KY3RklJs3b2I0mXjnne+sKV+r
      Vq266PGEkLKCmSjCL37xAaFgiHfeeYes7NR5zCqlcpW/+utibV1F/vm//jOBYIA/+sM/wmRO
      HdKyXl07Ozvp6enh1Vdf3VBT61RMTExw6dIlDAYD3/3ud5+KTFEU+fDDDwkGg5w5c4aCgoLN
      OQLk5eVhtVpTtvxRKBSrksSTOBfn+caZ09y6dWvN76yFWpX6oYhEIuTlZFN3vI7ZmSkK8lf3
      wv33Zi1dQ6EQRYX5VFZWMjM9ye7du5/K701PT/PWW28xNjb21AxgdnaWkydP0tLS8lTkwXJ8
      kcFg4MUXX2RycpKCgoLN6QUyGo3LkXzrXFiaTCbGx8fXjPbcCBqNBp/Pt9xgI82Kbc8KrVYr
      FfZ6Wg8qLFfTHhsbe6prMIvFwvj4+FPpNZBEqVQSDAaljjiwBd2gj6KxsRFRFDl58uRTk6lU
      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
    </thumbnail>
    <thumbnail height='104' name='Total Warehouse Sales by Year/Quarter' width='192'>
      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
      NqkqIG1SlfM/J8aEnrRVUUQAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
